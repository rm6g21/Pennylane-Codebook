def measure_state(state, num_meas):
    """Simulate a quantum measurement process.

    Args:
        state (np.array[complex]): A normalized qubit state vector.
        num_meas (int): The number of measurements to take

    Returns:
        np.array[int]: A set of num_meas samples, 0 or 1, chosen according to the probability
        distribution defined by the input state.
    """

    ##################
    # YOUR CODE HERE #
    ##################

    # COMPUTE THE MEASUREMENT OUTCOME PROBABILITIES
    prob_1 = abs(state[0])**2
    prob_2 = abs(state[1])**2

    outcomes = np.random.choice([0, 1], size=num_meas, p=[prob_1, prob_2])

    # RETURN THE LIST OF SAMPLE MEASUREMENT OUTCOMES
    return outcomes


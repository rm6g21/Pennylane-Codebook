n_bits=2
dev = qml.device("default.qubit", wires=range(n_bits))

@qml.qnode(dev)
def two_close_spins_X(alpha, beta, time, n):
    """Circuit for evolving the state of two electrons with an X coupling.
    
    Args:
        beta (float): The strength of the field, assumed to point in the z direction.
        alpha (float): The strength of the coupling between electrons.
        time (float): The time we evolve the electron wavefunction for.
        n (int): The number of steps in our Trotterization.

    Returns: 
        array[complex]: The quantum state after evolution.
    """

    ##################
    # YOUR CODE HERE #
    ##################

    for loop in range(n):
        for i in range(2):
            qml.RZ(-2*alpha*time/n,i)
        qml.IsingXX(2*beta*time/n,[0,1])
    return qml.state()

dev = qml.device('default.qubit', wires=4)

def qft_rotations(n_qubits):
    """A circuit performs the QFT rotations on the specified qubits.
    
    Args:
        n_qubits (int): An integer value identifying the number of qubits.
    """

    ##################
    # YOUR CODE HERE #
    ################## 

    phase_range = np.arange(2,n_qubits+1)

    for i in range(n_qubits):
        qml.Hadamard(wires=i)
        for j in range(i+1,n_qubits):
            qml.ControlledPhaseShift(np.pi/(2**(j-i)),wires=[j,i])
    
    pass

@qml.qnode(dev) 
def qft_node(basis_id, n_qubits):
    # Prepare the basis state |basis_id>
    bits = [int(x) for x in np.binary_repr(basis_id, width=n_qubits)]
    qml.BasisStatePreparation(bits, wires=range(n_qubits))
    qft_rotations(n_qubits)
    swap_bits(n_qubits)
    return qml.state()

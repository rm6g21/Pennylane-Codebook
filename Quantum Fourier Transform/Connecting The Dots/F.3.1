num_wires = 3
dev = qml.device("default.qubit", wires=num_wires)

@qml.qnode(dev)
def three_qubit_QFT(basis_id):
    """A circuit that computes the QFT on three qubits.
    
    Args:
        basis_id (int): An integer value identifying the basis state to construct.
        
    Returns:
        array[complex]: The state of the qubits after the QFT operation.
    """
    # Prepare the basis state |basis_id>
    bits = [int(x) for x in np.binary_repr(basis_id, width=num_wires)]
    qml.BasisStatePreparation(bits, wires=[0, 1, 2])
    
    ##################
    # YOUR CODE HERE #
    ################## 
    

    
    qml.Hadamard(wires=0)
    qml.ctrl(qml.S,1)(0)
    qml.ctrl(qml.T,2)(0)

    qml.Hadamard(wires=1)
    qml.ctrl(qml.S,2)(1)

    qml.Hadamard(wires=2)

    qml.SWAP([0,2])

    return qml.state()

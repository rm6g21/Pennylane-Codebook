m_list = range(3)
opt_steps = []

for m_bits in m_list:
    combos = [[int(s) for s in np.binary_repr(j, n_bits)] for j in range(2**m_bits)]
    step_list = range(1, 10)
    ##################
    # YOUR CODE HERE #
    ##################
    sol_list = []
    for step in step_list:
        sol_list.append(grover_iter_multi(combos,step)[0])
    opt_steps.append(local_max_arg(sol_list))

print("The optimal number of Grover steps for the number of solutions in", [1, 2, 4], "is", opt_steps, ".")

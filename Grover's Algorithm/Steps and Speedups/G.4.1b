n_list = range(3, 7)
opt_steps = []

for n_bits in n_list:
    combo = "0" * n_bits  # A simple combination
    step_list = range(1, 10)  # Try out some large number of steps
    ##################
    # YOUR CODE HERE #
    ##################
    num_list=[]
    for step in step_list:
        num_list.append(grover_iter(combo,step)[0]) # 0 index to highlight solution amp
    max_arg = local_max_arg(num_list)
    opt_steps.append(max_arg)
   

print("The optimal number of Grover steps for qubits in", [3, 4, 5, 6], "is", opt_steps, ".")
